#BlueJ class context
comment0.target=Ponto
comment0.text=\r\n\ Representa\u00E7\u00E3o\ de\ ponto\ matem\u00E1tico\ no\ plano\ 2D.\r\n\ Permite\ manipula\u00E7\u00E3o\ das\ coordenadas\ x\ e\ y,\ c\u00E1lculo\ de\ dist\u00E2ncia,\r\n\ e\ convers\u00E3o\ para/da\ representa\u00E7\u00E3o\ JSON.\r\n\ \r\n\ @author\ Amora\ Marinho\ Machado\r\n\ @author\ Gabriel\ Azevedo\ Cruz\r\n\ @author\ Gabriel\ Mechi\ Lima\r\n\ @author\ Luiz\ Fernando\ de\ Marchi\ Andrade\r\n\ @version\ 05/09/2025\r\n
comment1.params=
comment1.target=Ponto()
comment1.text=\r\n\ Construtor\ padr\u00E3o,\ inicializa\ o\ ponto\ na\ origem\ (0,0).\r\n
comment10.params=
comment10.target=org.json.JSONObject\ toJson()
comment10.text=\r\n\ Converte\ o\ ponto\ para\ um\ objeto\ JSONObject.\r\n\ \r\n\ @return\ JSONObject\ representando\ o\ ponto\r\n
comment11.params=json
comment11.target=Ponto\ fromJson(org.json.JSONObject)
comment11.text=\r\n\ Cria\ um\ ponto\ a\ partir\ de\ um\ JSONObject.\r\n\ \r\n\ @param\ json\ JSONObject\ contendo\ os\ dados\ do\ ponto\r\n\ @return\ novo\ objeto\ Ponto\r\n
comment12.params=jsonArray
comment12.target=java.util.List\ fromJsonArray(org.json.JSONArray)
comment12.text=\r\n\ Cria\ uma\ lista\ de\ pontos\ a\ partir\ de\ um\ JSONArray.\r\n\ \r\n\ @param\ jsonArray\ JSONArray\ contendo\ objetos\ ponto\r\n\ @return\ lista\ de\ objetos\ Ponto\r\n
comment2.params=p
comment2.target=Ponto(Ponto)
comment2.text=\r\n\ Construtor\ de\ c\u00F3pia.\r\n\ \r\n\ @param\ p\ Ponto\ a\ ser\ copiado\r\n
comment3.params=x\ y
comment3.target=Ponto(double,\ double)
comment3.text=\r\n\ Construtor\ com\ coordenadas\ espec\u00EDficas.\r\n\ \r\n\ @param\ x\ coordenada\ x\ do\ ponto\r\n\ @param\ y\ coordenada\ y\ do\ ponto\r\n
comment4.params=
comment4.target=double\ getX()
comment4.text=\r\n\ Retorna\ a\ coordenada\ x\ do\ ponto.\r\n\ \r\n\ @return\ coordenada\ x\r\n
comment5.params=x
comment5.target=void\ setX(double)
comment5.text=\r\n\ Define\ a\ coordenada\ x\ do\ ponto.\r\n\ \r\n\ @param\ x\ coordenada\ x\r\n
comment6.params=
comment6.target=double\ getY()
comment6.text=\r\n\ Retorna\ a\ coordenada\ y\ do\ ponto.\r\n\ \r\n\ @return\ coordenada\ y\r\n
comment7.params=y
comment7.target=void\ setY(double)
comment7.text=\r\n\ Define\ a\ coordenada\ y\ do\ ponto.\r\n\ \r\n\ @param\ y\ coordenada\ y\r\n
comment8.params=p
comment8.target=double\ calcularDistancia(Ponto)
comment8.text=\r\n\ Calcula\ a\ dist\u00E2ncia\ entre\ este\ ponto\ e\ outro\ ponto\ fornecido.\r\n\ \r\n\ @param\ p\ ponto\ externo\r\n\ @return\ valor\ da\ dist\u00E2ncia\ entre\ os\ dois\ pontos\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Representa\u00E7\u00E3o\ textual\ do\ ponto\ no\ formato\:\ Ponto\ [x,\ y]\r\n\ \r\n\ @return\ string\ representando\ o\ ponto\r\n
numComments=13
