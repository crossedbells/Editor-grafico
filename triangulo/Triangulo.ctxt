#BlueJ class context
comment0.target=Triangulo
comment0.text=\r\n\ Representa\ um\ triangulo\ matematico\ definido\ por\ tres\ pontos\r\n\ (vertices\ p1,\ p2\ e\ p3).\r\n\r\n\ <p>Um\ triangulo\ pode\ ser\ criado\ a\ partir\ de\:\r\n\ <ul>\r\n\ \ \ <li>tres\ objetos\ {@link\ Ponto}</li>\r\n\ \ \ <li>coordenadas\ inteiras</li>\r\n\ \ \ <li>coordenadas\ em\ ponto\ flutuante\ (double)</li>\r\n\ \ \ <li>copia\ de\ outro\ triangulo\ existente</li>\r\n\ </ul>\r\n\r\n\ <p>Exemplo\ de\ uso\:</p>\r\n\ <pre>\r\n\ \ \ \ \ Triangulo\ t1\ \=\ new\ Triangulo(new\ Ponto(0,\ 0),\ new\ Ponto(5,\ 0),\ new\ Ponto(3,\ 4));\r\n\ \ \ \ \ Triangulo\ t2\ \=\ new\ Triangulo(0,\ 0,\ 5,\ 0,\ 3,\ 4);\ //\ usando\ inteiros\r\n\ \ \ \ \ Triangulo\ t3\ \=\ new\ Triangulo(t1);\ //\ copia\ de\ outro\ triangulo\r\n\ </pre>\r\n\r\n\ @author\ Amora\ Marinho\ Machado\r\n\ @author\ Gabriel\ Azevedo\ Cruz\r\n\ @author\ Gabriel\ Mechi\ Lima\r\n\ @author\ Luiz\ Fernando\ de\ Marchi\ Andrade\r\n\ @version\ 05/09/2025\r\n
comment1.params=p1\ p2\ p3
comment1.target=Triangulo(ponto.Ponto,\ ponto.Ponto,\ ponto.Ponto)
comment1.text=\r\n\ Constroi\ um\ triangulo\ a\ partir\ de\ tres\ pontos.\r\n\r\n\ @param\ p1\ o\ primeiro\ vertice\r\n\ @param\ p2\ o\ segundo\ vertice\r\n\ @param\ p3\ o\ terceiro\ vertice\r\n
comment10.params=p3
comment10.target=void\ setP3(ponto.Ponto)
comment10.text=\r\n\ Define\ o\ terceiro\ vertice\ do\ triangulo.\r\n\r\n\ @param\ p3\ o\ novo\ ponto\ p3\r\n
comment11.params=x\ y
comment11.target=void\ atualizarP1(int,\ int)
comment11.text=\r\n\ Atualiza\ o\ primeiro\ vertice\ do\ triangulo.\r\n\ \r\n\ @param\ x\ nova\ coordenada\ x\ do\ ponto\ p1\r\n\ @param\ y\ nova\ coordenada\ y\ do\ ponto\ p1\r\n
comment12.params=x\ y
comment12.target=void\ atualizarP2(int,\ int)
comment12.text=\r\n\ Atualiza\ o\ segundo\ vertice\ do\ triangulo.\r\n\ \r\n\ @param\ x\ nova\ coordenada\ x\ do\ ponto\ p2\r\n\ @param\ y\ nova\ coordenada\ y\ do\ ponto\ p2\r\n
comment13.params=x\ y
comment13.target=void\ atualizarP3(int,\ int)
comment13.text=\r\n\ Atualiza\ o\ terceiro\ vertice\ do\ triangulo.\r\n\ \r\n\ @param\ x\ nova\ coordenada\ x\ do\ ponto\ p3\r\n\ @param\ y\ nova\ coordenada\ y\ do\ ponto\ p3\r\n
comment14.params=
comment14.target=org.json.JSONObject\ toJson()
comment14.text=\r\n\ Converte\ o\ triangulo\ para\ formato\ JSON.\r\n\ \r\n\ @return\ JSONObject\ representando\ o\ triangulo\r\n
comment15.params=json
comment15.target=Triangulo\ fromJson(org.json.JSONObject)
comment15.text=\r\n\ Cria\ um\ Triangulo\ a\ partir\ de\ um\ JSONObject.\r\n\ \r\n\ @param\ json\ JSONObject\ contendo\ os\ dados\ do\ triangulo\r\n\ @return\ novo\ objeto\ Triangulo\r\n
comment16.params=jsonArray
comment16.target=java.util.List\ fromJsonArray(org.json.JSONArray)
comment16.text=\r\n\ Cria\ uma\ lista\ de\ Triangulos\ a\ partir\ de\ um\ JSONArray.\r\n\ \r\n\ @param\ jsonArray\ JSONArray\ contendo\ triangulos\r\n\ @return\ lista\ de\ objetos\ Triangulo\r\n
comment2.params=x1\ y1\ x2\ y2\ x3\ y3
comment2.target=Triangulo(int,\ int,\ int,\ int,\ int,\ int)
comment2.text=\r\n\ Constroi\ um\ triangulo\ a\ partir\ de\ coordenadas\ inteiras.\r\n\r\n\ @param\ x1\ coordenada\ X\ do\ primeiro\ vertice\r\n\ @param\ y1\ coordenada\ Y\ do\ primeiro\ vertice\r\n\ @param\ x2\ coordenada\ X\ do\ segundo\ vertice\r\n\ @param\ y2\ coordenada\ Y\ do\ segundo\ vertice\r\n\ @param\ x3\ coordenada\ X\ do\ terceiro\ vertice\r\n\ @param\ y3\ coordenada\ Y\ do\ terceiro\ vertice\r\n
comment3.params=x1\ y1\ x2\ y2\ x3\ y3
comment3.target=Triangulo(double,\ double,\ double,\ double,\ double,\ double)
comment3.text=\r\n\ Constroi\ um\ triangulo\ a\ partir\ de\ coordenadas\ em\ ponto\ flutuante.\r\n\r\n\ @param\ x1\ coordenada\ X\ do\ primeiro\ vertice\r\n\ @param\ y1\ coordenada\ Y\ do\ primeiro\ vertice\r\n\ @param\ x2\ coordenada\ X\ do\ segundo\ vertice\r\n\ @param\ y2\ coordenada\ Y\ do\ segundo\ vertice\r\n\ @param\ x3\ coordenada\ X\ do\ terceiro\ vertice\r\n\ @param\ y3\ coordenada\ Y\ do\ terceiro\ vertice\r\n
comment4.params=t
comment4.target=Triangulo(Triangulo)
comment4.text=\r\n\ Constroi\ um\ triangulo\ copiando\ outro\ triangulo\ existente.\r\n\r\n\ @param\ t\ triangulo\ a\ ser\ copiado\r\n
comment5.params=
comment5.target=ponto.Ponto\ getP1()
comment5.text=\r\n\ Retorna\ o\ primeiro\ vertice\ do\ triangulo.\r\n\r\n\ @return\ o\ ponto\ p1\r\n
comment6.params=p1
comment6.target=void\ setP1(ponto.Ponto)
comment6.text=\r\n\ Define\ o\ primeiro\ vertice\ do\ triangulo.\r\n\r\n\ @param\ p1\ o\ novo\ ponto\ p1\r\n
comment7.params=
comment7.target=ponto.Ponto\ getP2()
comment7.text=\r\n\ Retorna\ o\ segundo\ vertice\ do\ triangulo.\r\n\r\n\ @return\ o\ ponto\ p2\r\n
comment8.params=p2
comment8.target=void\ setP2(ponto.Ponto)
comment8.text=\r\n\ Define\ o\ segundo\ vertice\ do\ triangulo.\r\n\r\n\ @param\ p2\ o\ novo\ ponto\ p2\r\n
comment9.params=
comment9.target=ponto.Ponto\ getP3()
comment9.text=\r\n\ Retorna\ o\ terceiro\ vertice\ do\ triangulo.\r\n\r\n\ @return\ o\ ponto\ p3\r\n
numComments=17
