#BlueJ class context
comment0.target=FiguraTriangulo
comment0.text=\r\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ de\ m\u00C3\u00A9todos\ est\u00C3\u00A1ticos\ para\ desenhar\ tri\u00C3\u00A2ngulos\r\n\ utilizando\ a\ API\ gr\u00C3\u00A1fica\ do\ Java\ ({@code\ Graphics2D}).\r\n\r\n\ <p>Esta\ classe\ serve\ como\ utilit\u00C3\u00A1rio\ para\ cria\u00C3\u00A7\u00C3\u00A3o\ de\ objetos\r\n\ {@link\ TrianguloGr}\ e\ delega\u00C3\u00A7\u00C3\u00A3o\ da\ l\u00C3\u00B3gica\ de\ desenho.</p>\r\n\r\n\ <p>Exemplo\ de\ uso\:</p>\r\n\ <pre>\r\n\ \ \ \ \ Graphics2D\ g\ \=\ (Graphics2D)\ painel.getGraphics();\r\n\ \ \ \ \ FiguraTriangulo.desenharTriangulo(g,\ 10,\ 20,\ 60,\ 80,\ 100,\ 30,\ Color.RED,\ 2);\r\n\ </pre>\r\n\r\n\ Nesse\ exemplo,\ um\ tri\u00C3\u00A2ngulo\ vermelho\ ser\u00C3\u00A1\ desenhado\r\n\ conectando\ os\ pontos\ (10,20),\ (60,80)\ e\ (100,30).\r\n\ \r\n\ @author\ Seu\ Nome\r\n\ @version\ 1.0\r\n
comment1.params=g\ x1\ y1\ x2\ y2\ x3\ y3\ cor\ espessura
comment1.target=void\ desenharTriangulo(java.awt.Graphics2D,\ int,\ int,\ int,\ int,\ int,\ int,\ java.awt.Color,\ int)
comment1.text=\r\n\ Desenha\ um\ tri\u00C3\u00A2ngulo\ na\ \u00C3\u00A1rea\ de\ desenho\ fornecida.\r\n\ O\ tri\u00C3\u00A2ngulo\ \u00C3\u00A9\ definido\ por\ tr\u00C3\u00AAs\ pontos\ {@code\ (x1,y1)},\ {@code\ (x2,y2)}\ e\ {@code\ (x3,y3)}.\r\n\r\n\ @param\ g\ \ \ \ \ \ \ \ \ o\ contexto\ gr\u00C3\u00A1fico\ {@code\ Graphics2D}\ onde\ o\ tri\u00C3\u00A2ngulo\ ser\u00C3\u00A1\ desenhado\r\n\ @param\ x1\ \ \ \ \ \ \ \ coordenada\ X\ do\ primeiro\ ponto\r\n\ @param\ y1\ \ \ \ \ \ \ \ coordenada\ Y\ do\ primeiro\ ponto\r\n\ @param\ x2\ \ \ \ \ \ \ \ coordenada\ X\ do\ segundo\ ponto\r\n\ @param\ y2\ \ \ \ \ \ \ \ coordenada\ Y\ do\ segundo\ ponto\r\n\ @param\ x3\ \ \ \ \ \ \ \ coordenada\ X\ do\ terceiro\ ponto\r\n\ @param\ y3\ \ \ \ \ \ \ \ coordenada\ Y\ do\ terceiro\ ponto\r\n\ @param\ cor\ \ \ \ \ \ \ a\ cor\ da\ linha\ do\ tri\u00C3\u00A2ngulo\r\n\ @param\ espessura\ a\ espessura\ da\ linha\ do\ tri\u00C3\u00A2ngulo\r\n
numComments=2
