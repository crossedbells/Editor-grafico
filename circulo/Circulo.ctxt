#BlueJ class context
comment0.target=Circulo
comment0.text=\r\n\ Implementa\ circulo\ matematico.\r\n\ Representa\ um\ circulo\ definido\ por\ um\ ponto\ central\ e\ um\ raio.\r\n\ \r\n\ @author\ Amora\ Marinho\ Machado\r\n\ @author\ Gabriel\ Azevedo\ Cruz\r\n\ @author\ Gabriel\ Mechi\ Lima\r\n\ @author\ Luiz\ Fernando\ de\ Marchi\ Andrade\r\n\ @version\ 05/09/2025\r\n
comment1.params=centro\ raio
comment1.target=Circulo(ponto.Ponto,\ double)
comment1.text=\r\n\ Construtor\ da\ classe\ circulo.\r\n\ \r\n\ @param\ centro\ Ponto\ centro\ do\ circulo\r\n\ @param\ raio\ raio\ do\ circulo\r\n
comment10.params=
comment10.target=org.json.JSONObject\ toJson()
comment10.text=\r\n\ Converte\ o\ circulo\ para\ formato\ JSON.\r\n\ \r\n\ @return\ JSONObject\ representando\ o\ circulo\r\n
comment11.params=json
comment11.target=Circulo\ fromJson(org.json.JSONObject)
comment11.text=\r\n\ Cria\ um\ Circulo\ a\ partir\ de\ um\ JSONObject.\r\n\ \r\n\ @param\ json\ JSONObject\ contendo\ os\ dados\ do\ circulo\r\n\ @return\ novo\ objeto\ Circulo\r\n
comment12.params=jsonArray
comment12.target=java.util.List\ fromJsonArray(org.json.JSONArray)
comment12.text=\r\n\ Cria\ uma\ lista\ de\ Circulos\ a\ partir\ de\ um\ JSONArray.\r\n\ \r\n\ @param\ jsonArray\ JSONArray\ contendo\ circulos\r\n\ @return\ lista\ de\ objetos\ Circulo\r\n
comment2.params=x\ y\ raio
comment2.target=Circulo(double,\ double,\ double)
comment2.text=\r\n\ Construtor\ da\ classe\ circulo\ com\ coordenadas.\r\n\ \r\n\ @param\ x\ coordenada\ x\ do\ centro\ do\ circulo\r\n\ @param\ y\ coordenada\ y\ do\ centro\ do\ circulo\r\n\ @param\ raio\ raio\ do\ circulo\r\n
comment3.params=c
comment3.target=Circulo(Circulo)
comment3.text=\r\n\ Construtor\ de\ copia\ da\ classe\ circulo.\r\n\ \r\n\ @param\ c\ circulo\ a\ ser\ copiado\r\n
comment4.params=
comment4.target=ponto.Ponto\ getCentro()
comment4.text=\r\n\ Retorna\ o\ centro\ do\ circulo.\r\n\ \r\n\ @return\ ponto\ central\ do\ circulo\r\n
comment5.params=centro
comment5.target=void\ setCentro(ponto.Ponto)
comment5.text=\r\n\ Define\ o\ centro\ do\ circulo.\r\n\ \r\n\ @param\ centro\ ponto\ central\ a\ ser\ definido\r\n
comment6.params=
comment6.target=double\ getRaio()
comment6.text=\r\n\ Retorna\ o\ raio\ do\ circulo.\r\n\ \r\n\ @return\ raio\ do\ circulo\r\n
comment7.params=raio
comment7.target=void\ setRaio(double)
comment7.text=\r\n\ Define\ o\ raio\ do\ circulo.\r\n\ \r\n\ @param\ raio\ raio\ a\ ser\ definido\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Retorna\ representacao\ em\ String\ do\ circulo.\r\n\ \r\n\ @return\ string\ contendo\ informacoes\ do\ centro\ e\ raio\r\n
comment9.params=x\ y
comment9.target=void\ atualizarRaio(int,\ int)
comment9.text=\r\n\ Atualiza\ o\ raio\ do\ circulo\ com\ base\ em\ um\ ponto\ na\ borda.\r\n\ Calcula\ a\ distancia\ euclidiana\ entre\ o\ centro\ e\ o\ ponto\ fornecido.\r\n\ \r\n\ @param\ x\ posicao\ x\ do\ mouse\ (borda)\r\n\ @param\ y\ posicao\ y\ do\ mouse\ (borda)\r\n
numComments=13
